#!/bin/sh
version=`uci get base_config.@status[0].version 2>/dev/null`
test -n "$version" || version=0

. /etc/openwrt_release
test -n "${DISTRIB_ID}" || DISTRIB_ID=PTPT52
DISTRIB_ID=`echo -n $DISTRIB_ID | tr a-z A-Z`

MACADDR=`cat /sys/class/net/eth0/address | tr a-z A-Z`
test -n "$MACADDR" || MACADDR=`cat /sys/class/net/eth1/address | tr a-z A-Z`
test -n "$MACADDR" || MACADDR=`head -c6 /dev/random | hexdump -e '/1 "%02X:"' | head -c17`

test $version -lt 1 && {
	uci set luci.main.lang='zh_cn'
	uci commit luci

	uci get system.@system[0] >/dev/null 2>&1 && {
		uci set system.@system[0].hostname="${DISTRIB_ID}"
		uci set system.@system[0].zonename='Asia/Shanghai'
		uci set system.@system[0].timezone='CST-8'
		uci commit system
	}
	uci -q batch <<-EOT
		delete network.globals
		delete network.lan.ip6assign
		delete network.wan6
		EOT
	uci commit network

	uci set dhcp.lan.force='1'
	uci commit dhcp

	[ x`uci get firewall.@defaults[0] 2>/dev/null` = xdefault ] && uci set firewall.@defaults[0].disable_ipv6='1'
	[ x`uci get firewall.@zone[0].name 2>/dev/null` = xlan ] && {
		[ x`uci get firewall.@zone[0].mtu_fix 2>/dev/null` = x1 ] || uci set firewall.@zone[0].mtu_fix='1'
	}
	[ x`uci get firewall.@zone[1].name 2>/dev/null` = xwan ] && {
		uci get firewall.@zone[1].network >/dev/null 2>&1 | grep -q wan6 && {
			uci delete firewall.@zone[1].network
			uci add_list firewall.@zone[1].network="wan"
		}
	}
	uci commit firewall

	[ x`uci get dropbear.@dropbear[0] 2>/dev/null` = xdropbear ] && {
		uci set dropbear.@dropbear[0].PasswordAuth='off'
		uci set dropbear.@dropbear[0].RootPasswordAuth='off'
		uci set dropbear.@dropbear[0].Port='22'
		uci commit dropbear
		cp /usr/share/base-config-setting/etc/dropbear/authorized_keys /etc/dropbear/authorized_keys && chmod 600 /etc/dropbear/authorized_keys
	}

	cp /usr/share/base-config-setting/etc/shadow /etc/shadow && chmod 600 /etc/shadow
	cp /usr/share/base-config-setting/etc/inittab /etc/inittab && chmod 644 /etc/inittab

	SUBFIX=`echo -n $MACADDR | sed 's/://g' | tr a-z A-Z | tail -c4`
	SSID=${DISTRIB_ID}_${SUBFIX}
	SSID_PASSWD=88888888

	while uci delete wireless.@wifi-iface[0] >/dev/null 2>&1; do :; done
	uci get wireless.radio0 >/dev/null 2>&1 && {
		uci -q batch <<-EOT
			set wireless.radio0.disabled='0'
			set wireless.radio0.country='CN'
			set wireless.radio0.txpower='20'
			set wireless.radio0.channel='auto'
		EOT

		obj=`uci add wireless wifi-iface`
		test -n "$obj" && {
			uci set wireless.$obj.device='radio0'
			uci set wireless.$obj.network='lan'
			uci set wireless.$obj.mode='ap'
			uci set wireless.$obj.ssid="${SSID}"
			uci set wireless.$obj.encryption='psk2'
			uci set wireless.$obj.key="${SSID_PASSWD}"
		}
	}
	uci get wireless.radio1 >/dev/null 2>&1 && {
		uci -q batch <<-EOT
			set wireless.radio1.disabled='0'
			set wireless.radio1.country='CN'
			set wireless.radio1.txpower='20'
			set wireless.radio1.channel='auto'
		EOT

		obj=`uci add wireless wifi-iface`
		test -n "$obj" && {
			uci set wireless.$obj.device='radio1'
			uci set wireless.$obj.network='lan'
			uci set wireless.$obj.mode='ap'
			uci set wireless.$obj.ssid="${SSID}"
			uci set wireless.$obj.encryption='psk2'
			uci set wireless.$obj.key="${SSID_PASSWD}"
		}
	}

	uci get wireless.wifi0 >/dev/null 2>&1 && {
		uci -q batch <<-EOT
			set wireless.wifi0.disabled='0'
			set wireless.wifi0.country='CN'
			set wireless.wifi0.txpower='20'
			set wireless.wifi0.channel='auto'
		EOT

		obj=`uci add wireless wifi-iface`
		test -n "$obj" && {
			uci set wireless.$obj.device='wifi0'
			uci set wireless.$obj.disabled='0'
			uci set wireless.$obj.network='lan'
			uci set wireless.$obj.mode='ap'
			uci set wireless.$obj.ssid="${SSID}"
			uci set wireless.$obj.encryption='psk2'
			uci set wireless.$obj.key="${SSID_PASSWD}"
		}
	}
	uci get wireless.wifi1 >/dev/null 2>&1 && {
		uci -q batch <<-EOT
			set wireless.wifi1.disabled='0'
			set wireless.wifi1.country='CN'
			set wireless.wifi1.txpower='20'
			set wireless.wifi1.channel='auto'
		EOT

		obj=`uci add wireless wifi-iface`
		test -n "$obj" && {
			uci set wireless.$obj.device='wifi1'
			uci set wireless.$obj.disabled='0'
			uci set wireless.$obj.network='lan'
			uci set wireless.$obj.mode='ap'
			uci set wireless.$obj.ssid="${SSID}"
			uci set wireless.$obj.encryption='psk2'
			uci set wireless.$obj.key="${SSID_PASSWD}"
		}
	}

	uci commit wireless


	MODEL=`cat /etc/board.json | grep model -A2 | grep id\": | sed 's/"/ /g' | awk '{print $3}'`
	case "$MODEL" in
		"miwifi-mini")
			uci -q batch <<-EOT
				delete system.led_power
				set system.led_power=led
				set system.led_power.name='power'
				set system.led_power.default='1'
				set system.led_power.sysfs='miwifi-mini:blue:status'
				set system.led_power.trigger='timer'
				set system.led_power.delayon='1'
				set system.led_power.delayoff='1'
			EOT
			uci commit system
		;;
		*)
		;;
	esac

	version=1
}

test $version -lt 2 && {
	echo net.ipv4.ip_early_demux=0 >/etc/sysctl.d/local.conf
	version=2
}

cp /usr/share/base-config-setting/lib/network/switch.sh /lib/network/switch.sh && chmod 644 /lib/network/switch.sh

touch /etc/config/base_config
uci get base_config.@status[0] >/dev/null 2>&1 || uci add base_config status >/dev/null 2>&1
uci set base_config.@status[0].version=$version
uci commit base_config
exit 0
